import requests
from requests.auth import HTTPDigestAuth

# Read IP addresses from a file
def load_ip_addresses(file_path):
    with open(file_path, 'r') as file:
        return [line.strip() for line in file if line.strip()]

# Credentials to test
username = "admin"
password = "admin"

# Proxy configuration
proxies = {
    "http": "http://127.0.0.1:8080",
    "https": "http://127.0.0.1:8080"
}

# Function to check authentication
def check_auth(ip):
    try:
        # Make the request with Digest Authentication, proxy, and SSL verification disabled
        response = requests.get(
            ip,
            auth=HTTPDigestAuth(username, password),
            proxies=proxies,
            timeout=5,
            verify=False  # Disable SSL verification
        )
        
        if response.status_code == 200:
            print(f"[SUCCESS] Authentication successful for {ip}")
        else:
            print(f"[FAILED] Authentication failed for {ip} - Status Code: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"[ERROR] Could not connect to {ip}: {e}")

# Load IP addresses from the specified file
file_path = "ip_addresses.txt"  # Replace with your file path
ip_addresses = load_ip_addresses(file_path)

# Iterate over each IP address and check authentication
for ip in ip_addresses:
    check_auth(ip)
